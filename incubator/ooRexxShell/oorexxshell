#
#!/bin/sh
#
# Because of MacOs El Capitan : Don't put /bin/sh on the first line.
# The variable DYLD_LIBRARY_PATH is unset because of System Integrity Protection.
# SIP only affects Apple-supplied binaries.
# Since sh is in /bin it is covered by SIP protections such that the library
# load path environment variable is stripped before being executed.
#
# Bug or feature ? if the shebang is removed and replaced with a blank line,
# the environment is inherited without being filtered by the default POSIX shell.

rxapi >/dev/null & # Workaround to avoid crash at first execution

# If the variable OOREXXSHELL_RLWRAP is defined
# then ooRexxShell will use a basic parse pull because rlwrap will manage the readline
# otherwise it will use the bash readline.
# A negative histsize means "don't modify the history file". ooRexxShell takes care of the history file.
[ -x "`which rlwrap`" ] && export OOREXXSHELL_RLWRAP="rlwrap --complete-filenames --command-name oorexxshell --histsize -300"

# Don't use rlwrap if ooRexxShell is not interactive.
# I don't want the output be polluted by the cleaning of the bracketed paste mode.
# ooRexxShell is interactive if stdin, stdout and stderr are associated with a terminal.
[ -t 0 -a -t 1 -a -t 2 ] || export OOREXXSHELL_RLWRAP=

while true
do
    $OOREXXSHELL_RLWRAP rexx oorexxshell.rex "$*"
    status=$?
    # echo "status=" $status
    if test $status -ne 200; then break; fi
done

# When using rlwrap, the terminal is in bracketed paste mode after leaving oorexxShell.
# Running the command printf '\e[?2004l' in the terminal clears the bracketed paste mode.
[ "$OOREXXSHELL_RLWRAP" ] && printf '\e[?2004l'

exit $status


