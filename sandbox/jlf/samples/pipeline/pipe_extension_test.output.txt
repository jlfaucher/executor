
-- The coactivity yields two results.
-- The hello outputs are not in the pipeline flow (not displayed by the .console).
{::c echo hello ; .yield[a] ; say hello ; .yield[b] }~doer~pipe(.upper|.console)
HELLO
1 : A
HELLO
2 : B


-- A collection can be sorted by value (default)
.array~of(b, a, c)~pipe(.sort byValue | .console)
2 : A
1 : B
3 : C


-- ...or by index
.array~of(b, a, c)~pipe(.sort byIndex | .console)
1 : B
2 : A
3 : C


-- ...ascending (default)
-- The order of options is important : a value option is impacted only by the preceding options
-- This is because several value options can be specified, and a sort is made for each.
.array~of(b, a, c)~pipe(.sort ascending byValue | .console)
2 : A
1 : B
3 : C


-- ...descending
.array~of(b, a, c)~pipe(.sort descending byValue | .console)
3 : C
1 : B
2 : A


-- ...by index descending
-- The order of options is important : an index option is impacted only by the preceding options.
-- This is because several index options can be specified, and a sort is made for each.
.array~of(b, a, c)~pipe(.sort descending byIndex | .console)
3 : C
2 : A
1 : B


-- ...caseless (stable by default)
.array~of("bb", "AA", "bB", "Aa", "Bb", "aA", "BB", "aa")~pipe(.sort caseless byValue | .console)
2 : AA
4 : Aa
6 : aA
8 : aa
1 : bb
3 : bB
5 : Bb
7 : BB


-- ...caseless quickSort (unstable)
-- No difference bewteen stable and unstable ? yes, see commit 6275 in interpreter/memory/setup.cpp :
--  // there have been some problems with the quick sort used as the default sort, so map everything
--  // to the stable sort.  The stable sort, in theory, uses more memory, but in practice, this is not true.
--  defineKernelMethod(CHAR_SORT         ,TheArrayBehaviour, CPPM(RexxArray::stableSortRexx), 0);
--  defineKernelMethod(CHAR_SORTWITH     ,TheArrayBehaviour, CPPM(RexxArray::stableSortWithRexx), 1);
--  defineKernelMethod(CHAR_STABLESORT   ,TheArrayBehaviour, CPPM(RexxArray::stableSortRexx), 0);
--  defineKernelMethod(CHAR_STABLESORTWITH ,TheArrayBehaviour, CPPM(RexxArray::stableSortWithRexx), 1);
.array~of("bb", "AA", "bB", "Aa", "Bb", "aA", "BB", "aa")~pipe(.sort caseless quickSort byValue | .console)
2 : AA
4 : Aa
6 : aA
8 : aa
1 : bb
3 : bB
5 : Bb
7 : BB


-- Sort descending with a comparator.
-- The DescendingComparator use the default CompareTo, which is made on values.
.array~of(b, a, c)~pipe(.sortWith[.DescendingComparator~new] | .console)
3 : C
1 : B
2 : A


-- Sort by column with a comparator.
.array~of("c:2", "b:2", "A:2", "c:1", "a:1", "B:1", "C:3")~pipe(,
    .sortWith[.InvertingComparator~new(.CaselessColumnComparator~new(3,1))] |,
    .sortWith[.CaselessColumnComparator~new(1,1)] |,
    .console,
    )
3 : A:2
5 : a:1
2 : b:2
6 : B:1
7 : C:3
1 : c:2
4 : c:1


-- Do something for each item (no returned value).
.array~of(1, , 2, , 3)~pipe(.do {say 'value='value 'index='.console~arrayToString(index)} | .console)
value=1 index=1
value=2 index=3
value=3 index=5


-- Do something for each item (the returned result replaces the item's value).
-- Note : the index created by .do is a pair (value, resultIndex) where
--     value is the processed value.
--     resultIndex is the index of the current result calculated with value.
-- Here, only one result is calculated for a value, so resultIndex is always 1.
.array~of(1, , 2, , 3)~pipe(.do {return 2*value} | .console)
1|1 : 2
2|1 : 4
3|1 : 6


-- Inject a value for each item (the returned value is appended).
-- The index of the injected value is pushed on the current index.
-- Index, 1st column : index of the values in the array on entry (1, 3, 5)
-- Index, 2nd column and 3rd column : pair (value, resultIndex)
.array~of(1, , 2, , 3)~pipe(.inject {value*10} pushIndex after | .console)
1|1|1 : 1
1|1|1 : 10
3|2|1 : 2
3|2|1 : 20
5|3|1 : 3
5|3|1 : 30


-- Inject two values for each item (each item of the returned collection is written in the pipe).
.array~of(1, , 2, , 3)~pipe(.inject {.array~of(value*10, value*20)} pushIndex after | .console)
1|1|1 : 1
1|1|1 : 10
1|1|2 : 20
3|2|1 : 2
3|2|1 : 20
3|2|2 : 40
5|3|1 : 3
5|3|1 : 30
5|3|2 : 60


-- Each injected value can be used as input to inject a new value, recursively.
-- The default order is depth-first.
-- If the recursion is infinite, must specify a limit (here 0, 1 and 2).
-- The options 'before' and 'after' are not used, so the initial value is discarded.
-- The index is like a call stack : you get one pair (value, resultIndex) for each level of recursion.
-- Ex : the last line is
-- 5|3|1|90|1|2700|1 : 81000
-- The item at index 5 in input array has generated 3 pairs by recursion : (3,1) then (90,1) then (2700,1)
.array~of(1, , 2, , 3)~pipe(.inject {value*10} pushIndex recursive.0 | .console)
1|1|1 : 10
3|2|1 : 20
5|3|1 : 30
.array~of(1, , 2, , 3)~pipe(.inject {value*20} pushIndex recursive.1| .console)
1|1|1 : 20
1|1|1|20|1 : 400
3|2|1 : 40
3|2|1|40|1 : 800
5|3|1 : 60
5|3|1|60|1 : 1200
.array~of(1, , 2, , 3)~pipe(.inject {value*30} pushIndex recursive.2 | .console)
1|1|1 : 30
1|1|1|30|1 : 900
1|1|1|30|1|900|1 : 27000
3|2|1 : 60
3|2|1|60|1 : 1800
3|2|1|60|1|1800|1 : 54000
5|3|1 : 90
5|3|1|90|1 : 2700
5|3|1|90|1|2700|1 : 81000


-- Factorial, no value injected for -1
-- The option 'pushIndex' is not used, so the index remains made of one pair (value, resultIndex).
.array~of(-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9)~pipe(.inject {
    use arg n
    if n < 0 then return
    if n == 0 then return 1
    return n * .context~executable~call(n - 1)} | .console)
0|1 : 1
1|1 : 1
2|1 : 2
3|1 : 6
4|1 : 24
5|1 : 120
6|1 : 720
7|1 : 5040
8|1 : 40320
9|1 : 362880


-- Select files in the installation directory, whose name contains "rexx".
-- Take the 15 firsts.
.file~new(installdir())~listFiles~pipe(,
    .select {value~name~caselessPos('rexx') <> 0} |,
    .take 15 |,
    .console,
    )
152 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.cls
153 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.dll
154 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.exp
155 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.lib
156 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.map
157 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.obj
184 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.dll
185 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.exe
186 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.exp
187 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.img
188 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.lib
189 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.map
190 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.obj
191 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.res
192 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\RexxActivation.obj


-- Select files in the installation directory, whose name contains "rexx" , sorted by file size.
-- The "length" message is sent to the value.
-- Take the 15 firsts.
.file~new(installdir())~listFiles~pipe(,
    .select {value~name~caselessPos('rexx') <> 0} |,
    .sortWith[.MessageComparator~new("length/N")] |,
    .take 15 |,
    .console,
    )
216 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexximage.obj
232 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxutil.exp
154 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.exp
233 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxutil.lib
204 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\RexxCompiler.obj
155 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.lib
186 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.exp
213 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxhide.obj
227 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxpaws.obj
190 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.obj
188 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.lib
196 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxapi.exp
191 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.res
152 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.cls
197 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxapi.lib


-- Same as above, but simpler... You can sort directly by length, no need of MessageComparator
.file~new(installdir())~listFiles~pipe(,
    .select {value~name~caselessPos('rexx') <> 0} |,
    .sort {value~length} |,
    .take 15 |,
    .console,
    )
216 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexximage.obj
232 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxutil.exp
154 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.exp
233 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxutil.lib
204 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\RexxCompiler.obj
155 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.lib
186 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.exp
213 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxhide.obj
227 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxpaws.obj
190 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.obj
188 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.lib
196 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxapi.exp
191 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.res
152 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.cls
197 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxapi.lib


-- Sort by file size, then by file extension (with only one .sort pipestage)
.file~new(installdir())~listFiles~pipe(,
    .select {value~name~caselessPos('rexx') <> 0} |,
    .sort {value~length} {filespec('e', value~name)} |,
    .take 15 |,
    .console,
    )
152 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.cls
153 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.dll
195 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxapi.dll
231 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxutil.dll
184 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.dll
214 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexximage.exe
211 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxhide.exe
200 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxc.exe
185 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.exe
225 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxpaws.exe
232 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxutil.exp
154 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.exp
186 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.exp
196 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexxapi.exp
187 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rexx.img


-- All instance methods of the context.
-- Notice that the default sort by value is useless here... Must sort by index.
.context~instanceMethods~pipe(.sort byIndex | .console)
 : a Method
  : a Method
<> : a Method
= : a Method
== : a Method
>< : a Method
ARGS : a Method
CLASS : a Method
CONDITION : a Method
COPY : a Method
COPY : a Method
DEFAULTNAME : a Method
DIGITS : a Method
DUMP2 : a Method
EXECUTABLE : a Method
FORM : a Method
FUZZ : a Method
HASHCODE : a Method
HASMETHOD : a Method
IDENTITYHASH : a Method
INIT : a Method
INSTANCEMETHOD : a Method
INSTANCEMETHODS : a Method
ISA : a Method
ISINSTANCEOF : a Method
LINE : a Method
OBJECTNAME : a Method
OBJECTNAME= : a Method
PACKAGE : a Method
PIPE : a Method
PIPEPROFILE : a Method
PP2 : a Method
PPINDEX2 : a Method
REQUEST : a Method
RS : a Method
RUN : a Method
SEND : a Method
SENDWITH : a Method
SETMETHOD : a Method
START : a Method
STARTWITH : a Method
STRING : a Method
UNSETMETHOD : a Method
VARIABLES : a Method
\= : a Method
\== : a Method
|| : a Method


-- All private methods of the context.
.context~instanceMethods~pipe(,
    .select {value~isPrivate} |,
    .sort byIndex |,
    .console,
    )
RUN : a Method
SETMETHOD : a Method
UNSETMETHOD : a Method


-- Instance methods of the specified classes (not including those inherited).
-- Each class is written in the pipeline, followed by the returned methods (option 'after').
.array~of(.RexxContext, .Package, .Method)~pipe(,
    .inject {value~instanceMethods(value~class)} after pushIndex |,
    .sort byIndex |,
    .console,
    )
1|The RexxContext class|1 : The RexxContext class
1|The RexxContext class|<> : a Method
1|The RexxContext class|= : a Method
1|The RexxContext class|== : a Method
1|The RexxContext class|>< : a Method
1|The RexxContext class|BASECLASS : a Method
1|The RexxContext class|DEFAULTNAME : a Method
1|The RexxContext class|DEFINE : a Method
1|The RexxContext class|DELETE : a Method
1|The RexxContext class|ENHANCED : a Method
1|The RexxContext class|HASHCODE : a Method
1|The RexxContext class|ID : a Method
1|The RexxContext class|INHERIT : a Method
1|The RexxContext class|ISSUBCLASSOF : a Method
1|The RexxContext class|METACLASS : a Method
1|The RexxContext class|METHOD : a Method
1|The RexxContext class|METHODS : a Method
1|The RexxContext class|MIXINCLASS : a Method
1|The RexxContext class|QUERYMIXINCLASS : a Method
1|The RexxContext class|SUBCLASS : a Method
1|The RexxContext class|SUBCLASSES : a Method
1|The RexxContext class|SUPERCLASS : a Method
1|The RexxContext class|SUPERCLASSES : a Method
1|The RexxContext class|UNINHERIT : a Method
1|The RexxContext class|\= : a Method
1|The RexxContext class|\== : a Method
2|The Package class|1 : The Package class
2|The Package class|<> : a Method
2|The Package class|= : a Method
2|The Package class|== : a Method
2|The Package class|>< : a Method
2|The Package class|BASECLASS : a Method
2|The Package class|DEFAULTNAME : a Method
2|The Package class|DEFINE : a Method
2|The Package class|DELETE : a Method
2|The Package class|ENHANCED : a Method
2|The Package class|HASHCODE : a Method
2|The Package class|ID : a Method
2|The Package class|INHERIT : a Method
2|The Package class|ISSUBCLASSOF : a Method
2|The Package class|METACLASS : a Method
2|The Package class|METHOD : a Method
2|The Package class|METHODS : a Method
2|The Package class|MIXINCLASS : a Method
2|The Package class|QUERYMIXINCLASS : a Method
2|The Package class|SUBCLASS : a Method
2|The Package class|SUBCLASSES : a Method
2|The Package class|SUPERCLASS : a Method
2|The Package class|SUPERCLASSES : a Method
2|The Package class|UNINHERIT : a Method
2|The Package class|\= : a Method
2|The Package class|\== : a Method
3|The Method class|!DEFINE_CLASS_METHOD : a Method
3|The Method class|!DEFINE_METHODS : a Method
3|The Method class|!REXXDEFINED : a Method
3|The Method class|1 : The Method class
3|The Method class|<> : a Method
3|The Method class|= : a Method
3|The Method class|== : a Method
3|The Method class|>< : a Method
3|The Method class|BASECLASS : a Method
3|The Method class|DEFAULTNAME : a Method
3|The Method class|DEFINE : a Method
3|The Method class|DELETE : a Method
3|The Method class|ENHANCED : a Method
3|The Method class|HASHCODE : a Method
3|The Method class|ID : a Method
3|The Method class|INHERIT : a Method
3|The Method class|ISSUBCLASSOF : a Method
3|The Method class|METACLASS : a Method
3|The Method class|METHOD : a Method
3|The Method class|METHODS : a Method
3|The Method class|MIXINCLASS : a Method
3|The Method class|QUERYMIXINCLASS : a Method
3|The Method class|SUBCLASS : a Method
3|The Method class|SUBCLASSES : a Method
3|The Method class|SUPERCLASS : a Method
3|The Method class|SUPERCLASSES : a Method
3|The Method class|UNINHERIT : a Method
3|The Method class|\= : a Method
3|The Method class|\== : a Method


-- Methods (not inherited) of all the classes whose id starts with "R".
.environment~pipe(,
    .select {value~isA(.class)} |,
    .select {value~id~caselessAbbrev('R') <> 0} |,
    .inject {value~methods(value)} after pushIndex |,
    .sort byIndex |,
    .console,
    )
RELATION|The Relation class|1 : The Relation class
RELATION|The Relation class|ALLAT : a Method
RELATION|The Relation class|ALLINDEX : a Method
RELATION|The Relation class|ALLINDEXES : a Method
RELATION|The Relation class|ALLITEMS : a Method
RELATION|The Relation class|AT : a Method
RELATION|The Relation class|DIFFERENCE : a Method
RELATION|The Relation class|EMPTY : a Method
RELATION|The Relation class|HASINDEX : a Method
RELATION|The Relation class|HASITEM : a Method
RELATION|The Relation class|INDEX : a Method
RELATION|The Relation class|INTERSECTION : a Method
RELATION|The Relation class|ISEMPTY : a Method
RELATION|The Relation class|ITEMS : a Method
RELATION|The Relation class|MAKEARRAY : a Method
RELATION|The Relation class|PUT : a Method
RELATION|The Relation class|READOBJECT : a Method
RELATION|The Relation class|REMOVE : a Method
RELATION|The Relation class|REMOVEALL : a Method
RELATION|The Relation class|REMOVEITEM : a Method
RELATION|The Relation class|SUBSET : a Method
RELATION|The Relation class|SUPPLIER : a Method
RELATION|The Relation class|UNION : a Method
RELATION|The Relation class|WRITEOBJECT : a Method
RELATION|The Relation class|XOR : a Method
RELATION|The Relation class|[] : a Method
RELATION|The Relation class|[]= : a Method
REXXCONTEXT|The RexxContext class|1 : The RexxContext class
REXXCONTEXT|The RexxContext class|ARGS : a Method
REXXCONTEXT|The RexxContext class|CONDITION : a Method
REXXCONTEXT|The RexxContext class|COPY : a Method
REXXCONTEXT|The RexxContext class|DIGITS : a Method
REXXCONTEXT|The RexxContext class|EXECUTABLE : a Method
REXXCONTEXT|The RexxContext class|FORM : a Method
REXXCONTEXT|The RexxContext class|FUZZ : a Method
REXXCONTEXT|The RexxContext class|LINE : a Method
REXXCONTEXT|The RexxContext class|PACKAGE : a Method
REXXCONTEXT|The RexxContext class|RS : a Method
REXXCONTEXT|The RexxContext class|VARIABLES : a Method
REXXCONTEXTUALSOURCE|The RexxContextualSource class|1 : The RexxContextualSource class
REXXCONTEXTUALSOURCE|The RexxContextualSource class|CALL : a Method
REXXCONTEXTUALSOURCE|The RexxContextualSource class|CALLWITH : a Method
REXXCONTEXTUALSOURCE|The RexxContextualSource class|CONTEXT : a Method
REXXCONTEXTUALSOURCE|The RexxContextualSource class|COPY : a Method
REXXCONTEXTUALSOURCE|The RexxContextualSource class|EXECUTABLE : a Method
REXXCONTEXTUALSOURCE|The RexxContextualSource class|PACKAGE : a Method
REXXCONTEXTUALSOURCE|The RexxContextualSource class|SOURCE : a Method
REXXQUEUE|The RexxQueue class|1 : The RexxQueue class
REXXQUEUE|The RexxQueue class|DELETE : a Method
REXXQUEUE|The RexxQueue class|EMPTY : a Method
REXXQUEUE|The RexxQueue class|GET : a Method
REXXQUEUE|The RexxQueue class|INIT : a Method
REXXQUEUE|The RexxQueue class|LINEIN : a Method
REXXQUEUE|The RexxQueue class|LINEOUT : a Method
REXXQUEUE|The RexxQueue class|MAKEARRAY : a Method
REXXQUEUE|The RexxQueue class|PULL : a Method
REXXQUEUE|The RexxQueue class|PUSH : a Method
REXXQUEUE|The RexxQueue class|QUEUE : a Method
REXXQUEUE|The RexxQueue class|QUEUED : a Method
REXXQUEUE|The RexxQueue class|SAY : a Method
REXXQUEUE|The RexxQueue class|SET : a Method
ROUTINE|The Routine class|1 : The Routine class
ROUTINE|The Routine class|CALL : a Method
ROUTINE|The Routine class|CALLWITH : a Method
ROUTINE|The Routine class|PACKAGE : a Method
ROUTINE|The Routine class|SETSECURITYMANAGER : a Method
ROUTINE|The Routine class|SOURCE : a Method


-- All packages that are visible from current context, including the current package (source of the pipeline).
.context~package~pipe(,
    .inject {value~importedPackages} recursive after pushIndex |,
    .console index.75,
             {'  '~copies(index~items)},
             {.file~new(value~name)~name},
             newline,
    )
1|a Package|1                                                                    pipe_extension_test.rex
1|a Package|1                                                                    extensions.cls
1|a Package|1|a Package|1                                                            doers.cls
1|a Package|1|a Package|1|a Package|1                                                    coactivity.cls
1|a Package|1|a Package|1|a Package|1|a Package|1                                            activity.cls
1|a Package|1|a Package|2                                                            functionals.cls
1|a Package|1|a Package|2|a Package|1                                                    doers.cls
1|a Package|1|a Package|2|a Package|1|a Package|1                                            coactivity.cls
1|a Package|1|a Package|2|a Package|1|a Package|1|a Package|1                                    activity.cls
1|a Package|1|a Package|3                                                            coactivity.cls
1|a Package|1|a Package|3|a Package|1                                                    activity.cls
1|a Package|2                                                                    coactivity.cls
1|a Package|2|a Package|1                                                            activity.cls
1|a Package|3                                                                    pipe_extension.cls
1|a Package|3|a Package|1                                                            pipe.rex
1|a Package|3|a Package|1|a Package|1                                                    profiling.cls
1|a Package|3|a Package|2                                                            extensions.cls
1|a Package|3|a Package|2|a Package|1                                                    doers.cls
1|a Package|3|a Package|2|a Package|1|a Package|1                                            coactivity.cls
1|a Package|3|a Package|2|a Package|1|a Package|1|a Package|1                                    activity.cls
1|a Package|3|a Package|2|a Package|2                                                    functionals.cls
1|a Package|3|a Package|2|a Package|2|a Package|1                                            doers.cls
1|a Package|3|a Package|2|a Package|2|a Package|1|a Package|1                                    coactivity.cls
1|a Package|3|a Package|2|a Package|2|a Package|1|a Package|1|a Package|1                            activity.cls
1|a Package|3|a Package|2|a Package|3                                                    coactivity.cls
1|a Package|3|a Package|2|a Package|3|a Package|1                                            activity.cls
1|a Package|4                                                                    rgf_util2_wrappers.rex
1|a Package|4|a Package|1                                                            rgf_util2.rex


-- Same as above, but in breadth-first order
.context~package~pipe(,
    .inject {value~importedPackages} recursive.breadthFirst after pushIndex |,
    .console index.75,
             {'  '~copies(index~items)},
             {.file~new(value~name)~name},
             newline,
    )
1|a Package|1                                                                    pipe_extension_test.rex
1|a Package|1                                                                    extensions.cls
1|a Package|2                                                                    coactivity.cls
1|a Package|3                                                                    pipe_extension.cls
1|a Package|4                                                                    rgf_util2_wrappers.rex
1|a Package|1|a Package|1                                                            doers.cls
1|a Package|1|a Package|2                                                            functionals.cls
1|a Package|1|a Package|3                                                            coactivity.cls
1|a Package|2|a Package|1                                                            activity.cls
1|a Package|3|a Package|1                                                            pipe.rex
1|a Package|3|a Package|2                                                            extensions.cls
1|a Package|4|a Package|1                                                            rgf_util2.rex
1|a Package|1|a Package|1|a Package|1                                                    coactivity.cls
1|a Package|1|a Package|2|a Package|1                                                    doers.cls
1|a Package|1|a Package|3|a Package|1                                                    activity.cls
1|a Package|3|a Package|1|a Package|1                                                    profiling.cls
1|a Package|3|a Package|2|a Package|1                                                    doers.cls
1|a Package|3|a Package|2|a Package|2                                                    functionals.cls
1|a Package|3|a Package|2|a Package|3                                                    coactivity.cls
1|a Package|1|a Package|1|a Package|1|a Package|1                                            activity.cls
1|a Package|1|a Package|2|a Package|1|a Package|1                                            coactivity.cls
1|a Package|3|a Package|2|a Package|1|a Package|1                                            coactivity.cls
1|a Package|3|a Package|2|a Package|2|a Package|1                                            doers.cls
1|a Package|3|a Package|2|a Package|3|a Package|1                                            activity.cls
1|a Package|1|a Package|2|a Package|1|a Package|1|a Package|1                                    activity.cls
1|a Package|3|a Package|2|a Package|1|a Package|1|a Package|1                                    activity.cls
1|a Package|3|a Package|2|a Package|2|a Package|1|a Package|1                                    coactivity.cls
1|a Package|3|a Package|2|a Package|2|a Package|1|a Package|1|a Package|1                            activity.cls


-- The .take pipeStage lets stop the preceding pipeStages when the number of items to take
-- has been reached, whatever its position in the pipeline.
supplier = .array~of(1,2,3,4,5,6,7,8,9)~supplier
supplier~pipe(.console "2*" value "=" | .do {return 2*value} | .take 2 | .console value newline)
2*1=2
2*2=4
say supplier~index -- this is the index of the last processed item
2
supplier~next -- skip the last processed item
supplier~pipe(.console "4*" value "=" | .do {return 4*value} | .take 4 | .console value newline)
4*3=12
4*4=16
4*5=20
4*6=24
say supplier~index
6


-- Display the 4 first sorted items
.array~of(5, 8, 1, 3, 6, 2)~pipe(.sort | .take 4 | .console)
3 : 1
6 : 2
4 : 3
1 : 5


-- Sort the 4 first items
.array~of(5, 8, 1, 3, 6, 2)~pipe(.take 4 | .sort | .console)
3 : 1
4 : 3
1 : 5
2 : 8


-- The .append pipeStage copies items from its primary input to its primary output, and then invokes
-- the supplier passed as argument and writes the items produced by that supplier to its primary output.
supplier1 = .array~of(1,2,3,4,5,6,7,8,9)~supplier
supplier2 = .array~of(10,11,12,13,14,15,16,17,18,19)~supplier
-- The first .take limits supplier1 to 2 items.
-- The second .take sees the two items produced by supplier1, so only 3 items are accepted from supplier2.
supplier1~pipe(.take 2 | .append supplier2 | .take 5 | .console)
1 : 1
2 : 2
1 : 10
2 : 11
3 : 12
say supplier1~index
2
say supplier2~index
3
supplier1~next
supplier2~next
supplier1~pipe(.take 4 | .append supplier2 | .take 9 | .console)
3 : 3
4 : 4
5 : 5
6 : 6
4 : 13
5 : 14
6 : 15
7 : 16
8 : 17
say supplier1~index
6
say supplier2~index
8


-- Remove header and footer
.array~of("header", 1, 2 ,3 , "footer")~pipe(.drop first | .drop last | .console)
2 : 1
3 : 2
4 : 3


-- The *.cls files of ooRexx
installdir()~pipe(,
    .fileTree recursive |,
    .select {filespec('e', value~name) == 'cls'} |,
    .console,
    )
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|32 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\csvStream.cls
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|115 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\mime.cls
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|133 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\ooDialog.cls
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|143 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\oodPlain.cls
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|150 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\oodWin32.cls
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|152 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.cls
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|242 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rxftp.cls
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|251 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\rxregexp.cls
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|280 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\smtp.cls
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|281 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\socket.cls
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|289 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\streamsocket.cls
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|336 : d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\winsystm.cls


-- From here, some methods of the pipeline classes are instrumented to let profiling.
-- The performances are impacted because the profiled methods are instrumented with an additional forward.
.pipeProfiler~instrument("start", "process", "eof", "isEOP")


-- Alphanumeric words of 16+ chars found in the *.cls files of ooRexx.
-- Only the first two words per file are taken :
--     .take 2 {index[3]}
-- Here, index[3] is the name of the file.
-- Exemple of result :
-- d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|336|d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\winsystm.cls|250|2 : DeleteDesktopIcon
-- "DeleteDesktopIcon" is the 2nd word of the 250th line of the file
-- "d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32dbg\winsystm.cls"
-- which is the 336th file/directory of the directory
-- "d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/"
--
-- To investigate : I get sometimes a crash in the sort.
--
installdir()~pipeProfile(,
    .fileTree recursive |,
    .select {filespec('e', value~name) == 'cls'} |,
    .getFiles | .words | .select {value~datatype('a') & value~length >= 16} |,
    .take 2 {index[3]} | .sort caseless | .console,
    )
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|336|d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\winsystm.cls|250|2 : DeleteDesktopIcon
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|152|d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.cls|70|2 : disconnectEvents
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|133|d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\ooDialog.cls|71|2 : getSystemMetrics
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|32|d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\csvStream.cls|64|2 : headerLineAbsent
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|289|d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\streamsocket.cls|52|5 : InputOutputStream
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|133|d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\ooDialog.cls|94|2 : isAtLeastWindows7
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|32|d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\csvStream.cls|63|2 : originalRawHeaders
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|152|d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\orexxole.cls|71|2 : removeEventHandler
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/|336|d:\local\Rexx\ooRexx\svn\sandbox\jlf\trunk\Win32rel\winsystm.cls|188|2 : WindowsProgramManager
----------------------------------------
.fileTree~go
  .fileTree~EOF count=1 duration=0
    .select~EOF count=1 duration=0
      .getFiles~EOF count=1 duration=0
        .words~EOF count=1 duration=0
          .select~EOF count=1 duration=0
            .take~EOF count=1 duration=0
              .sort~EOF count=1 duration=0
                .console~EOF count=1 duration=0
                .console~ISEOP count=18 duration=0
                .console~PROCESS count=9 duration=0
  .fileTree~ISEOP count=2 duration=0
  .fileTree~PROCESS count=1 duration=8.250000
    .select~ISEOP count=1242 duration=0
    .select~PROCESS count=621 duration=7.922000
      .getFiles~ISEOP count=633 duration=0
      .getFiles~PROCESS count=12 duration=7.765000
        .words~ISEOP count=28386 duration=0
        .words~PROCESS count=14181 duration=6.946000
          .select~ISEOP count=141387 duration=0.063000
          .select~PROCESS count=63603 duration=3.558000
            .take~ISEOP count=63974 duration=0.094000
            .take~PROCESS count=371 duration=0.077000
              .sort~ISEOP count=380 duration=0
              .sort~PROCESS count=9 duration=0
  .fileTree~START count=1 duration=0.015000
    .select~START count=1 duration=0.015000
      .getFiles~START count=1 duration=0.015000
        .words~START count=1 duration=0.015000
          .select~START count=1 duration=0.015000
            .take~START count=1 duration=0
              .sort~START count=1 duration=0
                .console~START count=1 duration=0
duration=8.265000
----------------------------------------


say installdir() ; say
d:/local/Rexx/ooRexx/svn/sandbox/jlf/trunk/Win32rel/

