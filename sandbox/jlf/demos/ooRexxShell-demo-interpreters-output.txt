loadPackage OK for extension/extensions.cls
loadLibrary OK for rxunixsys
loadPackage OK for ncurses.cls
loadPackage OK for csvStream.cls
loadLibrary OK for hostemu
loadPackage OK for json.cls
loadPackage OK for mime.cls
loadPackage OK for rxftp.cls
loadLibrary OK for rxmath
loadPackage OK for rxregexp.cls
loadPackage OK for regex/regex.cls
loadPackage OK for smtp.cls
loadPackage OK for socket.cls
loadPackage OK for streamsocket.cls
loadPackage OK for pipeline/pipe.rex
loadPackage OK for rgf_util2/rgf_util2.rex
loadPackage OK for BSF.CLS
loadPackage OK for oorexxshell_queries.cls
loadPackage OK for pipeline/pipe_extension.cls
loadPackage OK for rgf_util2/rgf_util2_wrappers.rex

REXX-ooRexx_4.3.0(MT)_64-bit 6.04 15 Jul 2021
Input queue name: S23b9Q7fd44851b920

--------------
-- ooRexxShell
--------------

ooRexxShell, derived from rexxtry.

This shell supports several interpreters:
- ooRexx itself
- the system address (cmd under Windows, sh or bash under Linux and MacOs)
- PowerShell core (pwsh)
- any other external environment (you need to modify ooRexxShell, search for hostemu for an example).

The prompt indicates which interpreter is active.
By default the shell is in ooRexx mode: ooRexx[bash]>
When the interpreter is ooRexx, the value of address() is displayed between [].

ooRexx[bash]> say "hello"
hello

ooRexx[bash]> say 1+2
3

A shell command can be used in ooRexx mode, surrounded with quotes.

ooRexx[bash]> 'ls -lap'
total 6208
drwxr-xr-x  40 jlfaucher  admin    1280 Jul 27 14:45 ./
drwxr-xr-x  14 jlfaucher  admin     448 Jul 14 14:50 ../
-rw-r--r--@  1 jlfaucher  admin    6148 Jun  5 23:47 .DS_Store
-rw-r--r--@  1 jlfaucher  admin    1820 Jul 16 17:18 Makefile
-rw-r--r--@  1 jlfaucher  admin    1083 Jun  6 02:51 _readme-demos.txt
drwxr-xr-x   7 jlfaucher  admin     224 May 31 22:54 arch/
-rwxr-xr-x@  1 jlfaucher  admin     425 Jun  1 04:12 demo
-rw-r--r--@  1 jlfaucher  admin   16755 Jun  6 02:27 executor-demo-array-output.html
-rw-r--r--   1 jlfaucher  admin    7764 Jun  1 04:14 executor-demo-array-output.txt
-rw-r--r--   1 jlfaucher  admin   42464 Jul 27 14:25 executor-demo-array.cast
-rw-r--r--@  1 jlfaucher  admin    5783 Jul 27 11:29 executor-demo-array.txt
-rw-r--r--@  1 jlfaucher  admin  322774 Jun  6 02:27 executor-demo-classic_rexx-output.html
-rw-r--r--   1 jlfaucher  admin  310045 Jun  1 02:59 executor-demo-classic_rexx-output.txt
-rw-r--r--   1 jlfaucher  admin  384245 Jul 27 14:28 executor-demo-classic_rexx.cast
-rw-r--r--@  1 jlfaucher  admin    1541 Jul 27 11:29 executor-demo-classic_rexx.txt
-rw-r--r--@  1 jlfaucher  admin   14023 Jun 28 20:23 executor-demo-extensions-output.html
-rw-r--r--   1 jlfaucher  admin    8630 Jun 28 20:23 executor-demo-extensions-output.txt
-rw-r--r--   1 jlfaucher  admin   31425 Jul 27 14:32 executor-demo-extensions.cast
-rw-r--r--@  1 jlfaucher  admin    2863 Jul 27 11:30 executor-demo-extensions.txt
-rw-r--r--@  1 jlfaucher  admin   26889 Jul 26 05:59 executor-demo-text-internal_checks-output.html
-rw-r--r--@  1 jlfaucher  admin   12871 Jul 26 05:59 executor-demo-text-internal_checks-output.txt
-rw-r--r--   1 jlfaucher  admin  135610 Jul 27 14:45 executor-demo-text-internal_checks.cast
-rw-r--r--@  1 jlfaucher  admin    8924 Jul 27 14:18 executor-demo-text-internal_checks.txt
-rw-r--r--@  1 jlfaucher  admin   22963 Jul 26 05:59 executor-demo-text-output.html
-rw-r--r--@  1 jlfaucher  admin   12456 Jul 26 05:59 executor-demo-text-output.txt
-rw-r--r--   1 jlfaucher  admin   76272 Jul 27 14:38 executor-demo-text.cast
-rw-r--r--@  1 jlfaucher  admin   11611 Jul 27 13:21 executor-demo-text.txt
-rw-r--r--@  1 jlfaucher  admin    7048 Jun  6 02:27 ooRexxShell-demo-helpers-output.html
-rw-r--r--   1 jlfaucher  admin    3529 Jun  1 04:14 ooRexxShell-demo-helpers-output.txt
-rw-r--r--   1 jlfaucher  admin    9677 Jul 27 14:45 ooRexxShell-demo-helpers.cast
-rw-r--r--@  1 jlfaucher  admin     807 Jul 27 11:30 ooRexxShell-demo-helpers.txt
-rw-r--r--@  1 jlfaucher  admin   16344 Jun  6 02:27 ooRexxShell-demo-interpreters-output.html
-rw-r--r--   1 jlfaucher  admin    9914 Jun  1 04:20 ooRexxShell-demo-interpreters-output.txt
-rw-r--r--   1 jlfaucher  admin    5282 Jul 27 14:46 ooRexxShell-demo-interpreters.cast
-rw-r--r--@  1 jlfaucher  admin    3659 Jul 27 11:31 ooRexxShell-demo-interpreters.txt
-rw-r--r--@  1 jlfaucher  admin  408823 Jun  6 02:27 ooRexxShell-demo-queries-output.html
-rw-r--r--@  1 jlfaucher  admin  396041 Jun  1 03:40 ooRexxShell-demo-queries-output.txt
-rw-r--r--   1 jlfaucher  admin  546449 May 31 23:15 ooRexxShell-demo-queries.cast
-rw-r--r--@  1 jlfaucher  admin    3841 Jul 27 11:31 ooRexxShell-demo-queries.txt
-rw-r--r--@  1 jlfaucher  admin   12449 Jul 26 05:32 out.txt

When not in ooRexx mode, you enter raw commands that are passed directly to the external environment.
You switch from an interpreter to an other one by entering its name alone.
To get the list of all interpreter names, enter this command:
?i[nterpreters]
Under Linux & MacOs, this list includes the shells in /etc/shells.

ooRexx[bash]> ?interpreters
Interpreters:
    bash: to activate the bash interpreter.
    cmd: to activate the sh interpreter.
    command: to activate the sh interpreter.
    csh: to activate the csh interpreter.
    hostemu: to activate the HostEmu interpreter.
    ksh: to activate the ksh interpreter.
    oorexx: to activate the ooRexx interpreter.
    pwsh: to activate the pwsh interpreter.
    screen: to activate the screen interpreter.
    sh: to activate the sh interpreter.
    system: to activate the sh interpreter.
    tcsh: to activate the tcsh interpreter.
    zsh: to activate the zsh interpreter.
[Info] 14 lines displayed

'cmd' 'command' and "system" are aliases to select the system interpreter.

ooRexx[bash]> system

Now the default interpreter is the system shell.
No need to surround the commands with quotes.

sh[ooRexx]> ls -lap
total 6216
drwxr-xr-x  40 jlfaucher  admin    1280 Jul 27 14:45 ./
drwxr-xr-x  14 jlfaucher  admin     448 Jul 14 14:50 ../
-rw-r--r--@  1 jlfaucher  admin    6148 Jun  5 23:47 .DS_Store
-rw-r--r--@  1 jlfaucher  admin    1820 Jul 16 17:18 Makefile
-rw-r--r--@  1 jlfaucher  admin    1083 Jun  6 02:51 _readme-demos.txt
drwxr-xr-x   7 jlfaucher  admin     224 May 31 22:54 arch/
-rwxr-xr-x@  1 jlfaucher  admin     425 Jun  1 04:12 demo
-rw-r--r--@  1 jlfaucher  admin   16755 Jun  6 02:27 executor-demo-array-output.html
-rw-r--r--   1 jlfaucher  admin    7764 Jun  1 04:14 executor-demo-array-output.txt
-rw-r--r--   1 jlfaucher  admin   42464 Jul 27 14:25 executor-demo-array.cast
-rw-r--r--@  1 jlfaucher  admin    5783 Jul 27 11:29 executor-demo-array.txt
-rw-r--r--@  1 jlfaucher  admin  322774 Jun  6 02:27 executor-demo-classic_rexx-output.html
-rw-r--r--   1 jlfaucher  admin  310045 Jun  1 02:59 executor-demo-classic_rexx-output.txt
-rw-r--r--   1 jlfaucher  admin  384245 Jul 27 14:28 executor-demo-classic_rexx.cast
-rw-r--r--@  1 jlfaucher  admin    1541 Jul 27 11:29 executor-demo-classic_rexx.txt
-rw-r--r--@  1 jlfaucher  admin   14023 Jun 28 20:23 executor-demo-extensions-output.html
-rw-r--r--   1 jlfaucher  admin    8630 Jun 28 20:23 executor-demo-extensions-output.txt
-rw-r--r--   1 jlfaucher  admin   31425 Jul 27 14:32 executor-demo-extensions.cast
-rw-r--r--@  1 jlfaucher  admin    2863 Jul 27 11:30 executor-demo-extensions.txt
-rw-r--r--@  1 jlfaucher  admin   26889 Jul 26 05:59 executor-demo-text-internal_checks-output.html
-rw-r--r--@  1 jlfaucher  admin   12871 Jul 26 05:59 executor-demo-text-internal_checks-output.txt
-rw-r--r--   1 jlfaucher  admin  135610 Jul 27 14:45 executor-demo-text-internal_checks.cast
-rw-r--r--@  1 jlfaucher  admin    8924 Jul 27 14:18 executor-demo-text-internal_checks.txt
-rw-r--r--@  1 jlfaucher  admin   22963 Jul 26 05:59 executor-demo-text-output.html
-rw-r--r--@  1 jlfaucher  admin   12456 Jul 26 05:59 executor-demo-text-output.txt
-rw-r--r--   1 jlfaucher  admin   76272 Jul 27 14:38 executor-demo-text.cast
-rw-r--r--@  1 jlfaucher  admin   11611 Jul 27 13:21 executor-demo-text.txt
-rw-r--r--@  1 jlfaucher  admin    7048 Jun  6 02:27 ooRexxShell-demo-helpers-output.html
-rw-r--r--   1 jlfaucher  admin    3529 Jun  1 04:14 ooRexxShell-demo-helpers-output.txt
-rw-r--r--   1 jlfaucher  admin    9677 Jul 27 14:45 ooRexxShell-demo-helpers.cast
-rw-r--r--@  1 jlfaucher  admin     807 Jul 27 11:30 ooRexxShell-demo-helpers.txt
-rw-r--r--@  1 jlfaucher  admin   16344 Jun  6 02:27 ooRexxShell-demo-interpreters-output.html
-rw-r--r--   1 jlfaucher  admin    9914 Jun  1 04:20 ooRexxShell-demo-interpreters-output.txt
-rw-r--r--   1 jlfaucher  admin   11653 Jul 27 14:46 ooRexxShell-demo-interpreters.cast
-rw-r--r--@  1 jlfaucher  admin    3659 Jul 27 11:31 ooRexxShell-demo-interpreters.txt
-rw-r--r--@  1 jlfaucher  admin  408823 Jun  6 02:27 ooRexxShell-demo-queries-output.html
-rw-r--r--@  1 jlfaucher  admin  396041 Jun  1 03:40 ooRexxShell-demo-queries-output.txt
-rw-r--r--   1 jlfaucher  admin  546449 May 31 23:15 ooRexxShell-demo-queries.cast
-rw-r--r--@  1 jlfaucher  admin    3841 Jul 27 11:31 ooRexxShell-demo-queries.txt
-rw-r--r--@  1 jlfaucher  admin   12449 Jul 26 05:32 out.txt

HostEmu is a subcommand environment that partially emulates a TSO/CMS environment.

sh[ooRexx]> hostemu

Now the default interpreteur is HostEmu.
No need to surround the commands with quotes.

EXECIO is an I/O mechanism.
The following command will read the 10 first lines from the file "../builder/scripts/setenv".
They are stored in the stem named "lines.".

HostEmu[ooRexx]> execio 10 diskr "../builder/scripts/setenv" (finis stem lines.
RC= 24

When in HostEmu mode, the ooRexx expressions are not recognized

HostEmu[ooRexx]> lines.=
hostemu: bad PLIST, token "syntax error"
RC= 24

You can switch temporarily to ooRexx to display the result.
For that, start your command line with "oorexx".

HostEmu[ooRexx]> oorexx lines.=
a Stem (0 items)

Switch to PowerShell core.
pwsh

HostEmu[ooRexx]> pwsh

Now the default interpreter is pwsh.
No need to surround the commands with quotes.

Find the commands containing "rexx":

pwsh[ooRexx]> get-command *rexx* | select -property name, source

Name                    Source
----                    ------
callrexx1               /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/callrexx1
callrexx2               /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/callrexx2
libBSF4ooRexx.dylib     /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/libBSF4ooRexx.dylib
oorexxshell             /local/rexx/oorexx/executor/incubator/ooRexxShell/oorexxshell
oorexx_collect_docfiles /local/rexx/builder/scripts/oorexx_collect_docfiles
oorexx_vars             /local/rexx/builder/scripts/oorexx_vars
rexx                    /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexx
rexx.cat                /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexx.cat
rexx.img                /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexx.img
rexxc                   /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexxc
rexxcUtil.rex           /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/rexxcUtil.rex
rexxj.sh                /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/rexxj.sh
rexxj2-32.sh            /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/rexxj2-32.sh
rexxj2-64.sh            /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/rexxj2-64.sh
rexxj2.cmd              /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/rexxj2.cmd
rexxj2.sh               /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/rexxj2.sh
rexxscriptlib.rex       /local/rexx/builder/scripts/rexxscriptlib.rex
rexxtry.rex             /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexxtry.r…
setenv-oorexx           /local/rexx/builder/scripts/setenv-oorexx
testOORexx.rex          /local/rexx/oorexx/official/test/trunk/testOORexx.rex


Same command, send the output to the rexx queue without the table headers.
The empty lines are still in the output, they will be filtered on ooRexx side.

pwsh[ooRexx]> get-command *rexx* | select -property name, source | format-table -HideTableHeaders | rxqueue

Collect the lines of the rexx queue in an array, and then parse the lines to create an ooRexx directory.

pwsh[ooRexx]> oorexx .rexxqueue~new~makearray~select{item <> ""}~reduce(.directory~new){parse value item~space with name source; accu[name]=source}=
a Directory (20 items)
'callrexx1'               : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/callrexx1'
'callrexx2'               : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/callrexx2'
'libBSF4ooRexx.dylib'     : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/libBSF4ooRexx.dylib'
'oorexxshell'             : '/local/rexx/oorexx/executor/incubator/ooRexxShell/oorexxshell'
'oorexx_collect_docfiles' : '/local/rexx/builder/scripts/oorexx_collect_docfiles'
'oorexx_vars'             : '/local/rexx/builder/scripts/oorexx_vars'
'rexx'                    : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexx'
'rexx.cat'                : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexx.cat'
'rexx.img'                : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexx.img'
'rexxc'                   : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexxc'
'rexxcUtil.rex'           : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/rexxcUtil.rex'
'rexxj.sh'                : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/rexxj.sh'
'rexxj2-32.sh'            : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/rexxj2-32.sh'
'rexxj2-64.sh'            : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/rexxj2-64.sh'
'rexxj2.cmd'              : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/rexxj2.cmd'
'rexxj2.sh'               : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210724-beta/bsf4oorexx/rexxj2.sh'
'rexxscriptlib.rex'       : '/local/rexx/builder/scripts/rexxscriptlib.rex'
'rexxtry.rex'             : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexxtry.rex'
'setenv-oorexx'           : '/local/rexx/builder/scripts/setenv-oorexx'
'testOORexx.rex'          : '/local/rexx/oorexx/official/test/trunk/testOORexx.rex'

Back to the ooRexx interpreter, by entering "oorexx" alone.

pwsh[ooRexx]> oorexx

ooRexx[bash]> say "The default interpreter is now ooRexx"
The default interpreter is now ooRexx

End of demonstration.

