loadPackage OK for extension/extensions.cls
loadLibrary OK for rxunixsys
loadPackage OK for ncurses.cls
loadPackage OK for csvStream.cls
loadLibrary OK for hostemu
loadPackage OK for json.cls
loadPackage OK for mime.cls
loadPackage OK for rxftp.cls
loadLibrary OK for rxmath
loadPackage OK for rxregexp.cls
loadPackage OK for regex/regex.cls
loadPackage OK for smtp.cls
loadPackage OK for socket.cls
loadPackage OK for streamsocket.cls
loadPackage OK for pipeline/pipe.rex
loadPackage OK for rgf_util2/rgf_util2.rex
loadPackage OK for BSF.CLS
loadPackage OK for oorexxshell_queries.cls
loadPackage OK for pipeline/pipe_extension.cls
loadPackage OK for rgf_util2/rgf_util2_wrappers.rex

REXX-ooRexx_4.3.0(MT)_64-bit 6.04 15 Jul 2021
Input queue name: S5318Q7fd44852ff70

--------------
-- ooRexxShell
--------------

ooRexxShell, derived from rexxtry.

This shell supports several interpreters:
- ooRexx itself
- the system address (cmd under Windows, sh or bash under Linux and MacOs)
- PowerShell core (pwsh)
- any other external environment (you need to modify ooRexxShell, search for hostemu for an example).

The prompt indicates which interpreter is active.
By default the shell is in ooRexx mode: ooRexx[bash]>
When the interpreter is ooRexx, the value of address() is displayed between [].

ooRexx[bash]> say "hello"
hello

ooRexx[bash]> say 1+2
3

ooRexx[bash]> 
If an ooRexx clause ends with "=" then the clause is transformed to display the result :
'1+2=' becomes 'options "NOCOMMANDS"; 1+2 ; call dumpResult; options "COMMANDS"'
'=' alone displays the current value of the variable RESULT.

ooRexx[bash]> 1+2=
 3

ooRexx[bash]> (1,2)=          -- When "=" then the arrays are displayed in condensed form
[ 1, 2]

ooRexx[bash]> (1,2)==         -- When "==" then the arrays are displayed one item per line
an Array (shape [2], 2 items)
 1 :  1
 2 :  2

ooRexx[bash]> 
You have access to Java.

ooRexx[bash]> jsystem = bsf.loadClass('java.lang.System')

ooRexx[bash]> properties = jsystem~getProperties

ooRexx[bash]> enum = properties~propertyNames

ooRexx[bash]> do while enum~hasMoreElements; key=enum~nextElement; say "key:" left("["key"]",30) "value: ["properties~getProperty(key)"]"; end
key: [java.runtime.name]            value: [OpenJDK Runtime Environment]
key: [java.vm.version]              value: [16.0.1+9]
key: [sun.boot.library.path]        value: [/local/java/jdk/bellsoft/jdk-16.0.1-full.jdk/lib]
key: [java.vm.vendor]               value: [BellSoft]
key: [java.vendor.url]              value: [https://bell-sw.com/]
key: [path.separator]               value: [:]
key: [java.vm.name]                 value: [OpenJDK 64-Bit Server VM]
key: [user.country]                 value: [FR]
key: [java.vm.compressedOopsMode]   value: [Zero based]
key: [java.vm.specification.name]   value: [Java Virtual Machine Specification]
key: [user.dir]                     value: [/local/rexx/oorexx/executor/sandbox/jlf/demos]
key: [java.runtime.version]         value: [16.0.1+9]
key: [os.arch]                      value: [x86_64]
key: [line.separator]               value: [
]
key: [java.io.tmpdir]               value: [/var/folders/f6/ls9l793n1bg444403jmfh1_m0000gp/T/]
key: [java.vm.specification.vendor] value: [Oracle Corporation]
key: [os.name]                      value: [Mac OS X]
key: [sun.jnu.encoding]             value: [UTF-8]
key: [java.library.path]            value: [/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/lib:/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/install/64:]
key: [jdk.debug]                    value: [release]
key: [java.class.version]           value: [60.0]
key: [java.specification.name]      value: [Java Platform API Specification]
key: [sun.management.compiler]      value: [HotSpot 64-Bit Tiered Compilers]
key: [os.version]                   value: [10.13.6]
key: [http.nonProxyHosts]           value: [local|*.local|169.254/16|*.169.254/16]
key: [user.home]                    value: [/Users/jlfaucher]
key: [file.encoding]                value: [UTF-8]
key: [java.specification.version]   value: [16]
key: [user.name]                    value: [jlfaucher]
key: [java.class.path]              value: [/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/bsf4ooRexx-v641-20210728-bin.jar:]
key: [java.vm.specification.version value: [16]
key: [sun.arch.data.model]          value: [64]
key: [java.home]                    value: [/local/java/jdk/bellsoft/jdk-16.0.1-full.jdk]
key: [user.language]                value: [en]
key: [java.specification.vendor]    value: [Oracle Corporation]
key: [java.vm.info]                 value: [mixed mode, sharing]
key: [java.version]                 value: [16.0.1]
key: [java.awt.headless]            value: [true]
key: [java.vendor]                  value: [BellSoft]
key: [file.separator]               value: [/]
key: [java.version.date]            value: [2021-04-20]
key: [java.vendor.url.bug]          value: [https://bell-sw.com/support]
key: [sun.io.unicode.encoding]      value: [UnicodeBig]
key: [sun.cpu.endian]               value: [little]
key: [socksNonProxyHosts]           value: [local|*.local|169.254/16|*.169.254/16]
key: [ftp.nonProxyHosts]            value: [local|*.local|169.254/16|*.169.254/16]

ooRexx[bash]> 
A shell command can be used in ooRexx mode, surrounded with quotes.

ooRexx[bash]> 'ls -lap *demo*.txt'
-rw-r--r--@ 1 jlfaucher  admin    1159 Aug  6 10:58 _readme-demos.txt
-rw-r--r--@ 1 jlfaucher  admin    8825 Jul 27 18:14 executor-demo-array-output.txt
-rw-r--r--@ 1 jlfaucher  admin    5784 Jul 27 18:05 executor-demo-array.txt
-rw-r--r--  1 jlfaucher  admin  314237 Jul 27 17:57 executor-demo-classic_rexx-output.txt
-rw-r--r--@ 1 jlfaucher  admin    1541 Jul 27 11:29 executor-demo-classic_rexx.txt
-rw-r--r--@ 1 jlfaucher  admin    9584 Jul 27 18:35 executor-demo-extensions-output.txt
-rw-r--r--@ 1 jlfaucher  admin   12175 Aug  7 01:19 executor-demo-extensions.txt
-rw-r--r--  1 jlfaucher  admin    7947 Aug  6 13:00 executor-demo-text-compatibility-output.txt
-rw-r--r--@ 1 jlfaucher  admin    4111 Aug  6 12:54 executor-demo-text-compatibility.txt
-rw-r--r--  1 jlfaucher  admin   22439 Aug  6 09:27 executor-demo-text-internal_checks-output.txt
-rw-r--r--@ 1 jlfaucher  admin   11839 Aug  5 23:44 executor-demo-text-internal_checks.txt
-rw-r--r--  1 jlfaucher  admin   15547 Aug  5 17:18 executor-demo-text-output.txt
-rw-r--r--@ 1 jlfaucher  admin   11925 Aug  5 17:09 executor-demo-text.txt
-rw-r--r--  1 jlfaucher  admin    4556 Jul 27 17:57 ooRexxShell-demo-helpers-output.txt
-rw-r--r--@ 1 jlfaucher  admin     807 Jul 27 11:30 ooRexxShell-demo-helpers.txt
-rw-r--r--  1 jlfaucher  admin   15557 Jul 27 17:57 ooRexxShell-demo-interpreters-output.txt
-rw-r--r--@ 1 jlfaucher  admin    4139 Aug  6 17:47 ooRexxShell-demo-interpreters.txt
-rw-r--r--@ 1 jlfaucher  admin  413605 Jul 27 17:57 ooRexxShell-demo-queries-output.txt
-rw-r--r--@ 1 jlfaucher  admin    3841 Jul 27 14:50 ooRexxShell-demo-queries.txt

ooRexx[bash]> 
When not in ooRexx mode, you enter raw commands that are passed directly to the external environment.
You switch from an interpreter to an other one by entering its name alone.
To get the list of all interpreter names, enter this command:
?i[nterpreters]
Under Linux & MacOs, this list includes the shells in /etc/shells.

ooRexx[bash]> ?interpreters
Interpreters:
    bash: to activate the bash interpreter.
    cmd: to activate the sh interpreter.
    command: to activate the sh interpreter.
    csh: to activate the csh interpreter.
    hostemu: to activate the HostEmu interpreter.
    ksh: to activate the ksh interpreter.
    oorexx: to activate the ooRexx interpreter.
    pwsh: to activate the pwsh interpreter.
    screen: to activate the screen interpreter.
    sh: to activate the sh interpreter.
    system: to activate the sh interpreter.
    tcsh: to activate the tcsh interpreter.
    zsh: to activate the zsh interpreter.
[Info] 14 lines displayed

ooRexx[bash]> 
'cmd' 'command' and "system" are aliases to select the system interpreter.

ooRexx[bash]> system

sh[ooRexx]> 
Now the default interpreter is the system shell.
No need to surround the commands with quotes.

sh[ooRexx]> ls -lap *demo*.cast
-rw-r--r--  1 jlfaucher  admin   42806 Jul 27 18:14 executor-demo-array.cast
-rw-r--r--  1 jlfaucher  admin  384245 Jul 27 14:28 executor-demo-classic_rexx.cast
-rw-r--r--  1 jlfaucher  admin  110399 Aug  7 01:29 executor-demo-extensions.cast
-rw-r--r--  1 jlfaucher  admin   70658 Aug  6 13:00 executor-demo-text-compatibility.cast
-rw-r--r--  1 jlfaucher  admin  145860 Aug  6 09:23 executor-demo-text-internal_checks.cast
-rw-r--r--  1 jlfaucher  admin   82500 Aug  5 17:18 executor-demo-text.cast
-rw-r--r--  1 jlfaucher  admin    9677 Jul 27 14:45 ooRexxShell-demo-helpers.cast
-rw-r--r--  1 jlfaucher  admin   20778 Aug  7 01:31 ooRexxShell-demo-interpreters.cast
-rw-r--r--  1 jlfaucher  admin  501507 Jul 27 14:51 ooRexxShell-demo-queries.cast

sh[ooRexx]> 
HostEmu is a subcommand environment that partially emulates a TSO/CMS environment.

sh[ooRexx]> hostemu

HostEmu[ooRexx]> 
Now the default interpreteur is HostEmu.
No need to surround the commands with quotes.

HostEmu[ooRexx]> 
EXECIO is an I/O mechanism.
The following command will read the 10 first lines from the file "_readme-demos.txt".
They are stored in the stem named "lines.".

HostEmu[ooRexx]> execio 10 diskr "_readme-demos.txt" (finis stem lines.

HostEmu[ooRexx]> 
When in HostEmu mode, the ooRexx expressions are not recognized

HostEmu[ooRexx]> lines.=
hostemu: bad PLIST, token "syntax error"
RC= 24

HostEmu[ooRexx]> 
You can switch temporarily to ooRexx to display the result.
For that, start your command line with "oorexx".

HostEmu[ooRexx]> oorexx lines.=
a Stem (11 items)
 0  :  10
 1  : 'Demonstration scripts.'
 2  : 'ooRexxShell has a demo mode with slow display.'
 3  : ''
 4  : 'https://asciinema.org/              asciinema   Terminal session recorder'
 5  : 'https://github.com/theZiz/aha       aha         Ansi HTML Adapter.'
 6  : ''
 7  : 'Current demos:'
 8  : 'executor-demo-array.txt'
 9  : 'executor-demo-classic_rexx.txt'
 10 : 'executor-demo-extensions.txt'

HostEmu[ooRexx]> 
Switch to PowerShell core.
pwsh

HostEmu[ooRexx]> pwsh

pwsh[ooRexx]> 
Now the default interpreter is pwsh.
No need to surround the commands with quotes.

Find the commands containing "rexx":

pwsh[ooRexx]> get-command *rexx* | select -property name, source

Name                    Source
----                    ------
callrexx1               /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/callrexx1
callrexx2               /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/callrexx2
libBSF4ooRexx.dylib     /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/libBSF4ooRexx.dylib
oorexxshell             /local/rexx/oorexx/executor/incubator/ooRexxShell/oorexxshell
oorexx_collect_docfiles /local/rexx/builder/scripts/oorexx_collect_docfiles
oorexx_vars             /local/rexx/builder/scripts/oorexx_vars
rexx                    /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexx
rexx.cat                /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexx.cat
rexx.img                /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexx.img
rexxc                   /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexxc
rexxcUtil.rex           /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/rexxcUtil.rex
rexxj.sh                /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/rexxj.sh
rexxj2-32.sh            /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/rexxj2-32.sh
rexxj2-64.sh            /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/rexxj2-64.sh
rexxj2.cmd              /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/rexxj2.cmd
rexxj2.sh               /local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/rexxj2.sh
rexxscriptlib.rex       /local/rexx/builder/scripts/rexxscriptlib.rex
rexxtry.rex             /local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexxtry.r…
setenv-oorexx           /local/rexx/builder/scripts/setenv-oorexx
testOORexx.rex          /local/rexx/oorexx/official/test/trunk/testOORexx.rex


pwsh[ooRexx]> 
Same command, send the output to the rexx queue without the table headers.
The empty lines are still in the output, they will be filtered on ooRexx side.

pwsh[ooRexx]> get-command *rexx* | select -property name, source | format-table -HideTableHeaders | rxqueue

pwsh[ooRexx]> 
Collect the lines of the rexx queue in an array, and then parse the lines to create an ooRexx directory.

pwsh[ooRexx]> oorexx .rexxqueue~new~makearray~select{item <> ""}~reduce(.directory~new){parse value item~space with name source; accu[name]=source}=
a Directory (20 items)
'callrexx1'               : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/callrexx1'
'callrexx2'               : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/callrexx2'
'libBSF4ooRexx.dylib'     : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/libBSF4ooRexx.dylib'
'oorexxshell'             : '/local/rexx/oorexx/executor/incubator/ooRexxShell/oorexxshell'
'oorexx_collect_docfiles' : '/local/rexx/builder/scripts/oorexx_collect_docfiles'
'oorexx_vars'             : '/local/rexx/builder/scripts/oorexx_vars'
'rexx'                    : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexx'
'rexx.cat'                : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexx.cat'
'rexx.img'                : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexx.img'
'rexxc'                   : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexxc'
'rexxcUtil.rex'           : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/rexxcUtil.rex'
'rexxj.sh'                : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/rexxj.sh'
'rexxj2-32.sh'            : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/rexxj2-32.sh'
'rexxj2-64.sh'            : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/rexxj2-64.sh'
'rexxj2.cmd'              : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/rexxj2.cmd'
'rexxj2.sh'               : '/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20210728-beta/bsf4oorexx/rexxj2.sh'
'rexxscriptlib.rex'       : '/local/rexx/builder/scripts/rexxscriptlib.rex'
'rexxtry.rex'             : '/local/rexx/oorexx/build/executor.master/sandbox/jlf/trunk/macos/clang/release/64/delivery/bin/rexxtry.rex'
'setenv-oorexx'           : '/local/rexx/builder/scripts/setenv-oorexx'
'testOORexx.rex'          : '/local/rexx/oorexx/official/test/trunk/testOORexx.rex'

pwsh[ooRexx]> 
Back to the ooRexx interpreter, by entering "oorexx" alone.

pwsh[ooRexx]> oorexx

ooRexx[bash]> say "The default interpreter is now ooRexx"
The default interpreter is now ooRexx

ooRexx[bash]> 
End of demonstration.

